import java.io.*;
import java.nio.CharBuffer;
import java.nio.file.Path;

public class FileUtils {
	
	private FileUtils(){
		
	}
	private static FileUtils mInstance;
	
	public static FileUtils getInstance(){
		if(mInstance==null){
			mInstance=new FileUtils();
		}
		return mInstance;
	}
	
	static String readFrom(File file) throws IOException{
		StringBuilder input = new StringBuilder();
		BufferedReader inputStream = null;
		try {
			inputStream = new BufferedReader(new FileReader(file));
			String line;
			while ((line = inputStream.readLine()) != null) {
				input.append(line);
				input.append(System.lineSeparator());
			}
		} finally {
			if (inputStream != null) {
				inputStream.close();
			}
		}
		return input.toString();
	}
	
	static String readFrom(Path path) throws IOException {
		return readFrom(path.toFile());
	}
	
	static WordCountResult wordCount(File file) throws IOException{
		BufferedReader inputStream=null;
		int words=0;
		int lines=0;
		int characters=0;
		try{
			inputStream=new BufferedReader(new FileReader(file));
			String line;
			while((line=inputStream.readLine())!=null){
				lines++;
				line.replaceAll("\\t", "");
				String[] myWords=line.replaceAll("\\s+", " ").split(" ");
				words+=myWords.length;
				
				for(String word:myWords){
					characters+=word.length();
				}
			}
		}finally{
			if(inputStream!=null){
				inputStream.close();
			}
		}
		return new WordCountResult(words,lines,characters);
	}
	
	static WordCountResult wordCount(Path path) throws IOException{
		return wordCount(path.toFile());
	}
	static void readInput(Path path)  throws IOException {
		    BufferedReader reader = new BufferedReader(new FileReader(path.toFile()));
		    BufferedWriter writer = new BufferedWriter(new FileWriter("text.txt"));
		    String in;
		    while ((in = reader.readLine()) != null) {
		    	//System.out.println(in);
		    	in=new String(in.getBytes("Windows-1252"),"UTF8");
		    	writer.write(in);
		        writer.newLine();
		    }
	}
}
